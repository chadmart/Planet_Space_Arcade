#############################################################################
# Makefile for building: hw4
# Generated by qmake (2.01a) (Qt 4.8.1) on: Wed Nov 28 14:11:31 2012
# Project:  hw4.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile hw4.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = badguy.cpp \
		bullet.cpp \
		collisions.cpp \
		dropPowerUps.cpp \
		explosions.cpp \
		main.cpp \
		moveBullets.cpp \
		powerup.cpp \
		screens.cpp \
		shield.cpp \
		slots.cpp \
		spaceship.cpp \
		spacewars.cpp \
		user.cpp moc_spacewars.cpp
OBJECTS       = badguy.o \
		bullet.o \
		collisions.o \
		dropPowerUps.o \
		explosions.o \
		main.o \
		moveBullets.o \
		powerup.o \
		screens.o \
		shield.o \
		slots.o \
		spaceship.o \
		spacewars.o \
		user.o \
		moc_spacewars.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		hw4.pro
QMAKE_TARGET  = hw4
DESTDIR       = 
TARGET        = hw4

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: hw4.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile hw4.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile hw4.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/hw41.0.0 || $(MKDIR) .tmp/hw41.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/hw41.0.0/ && $(COPY_FILE) --parents badguy.h bullet.h linkedlist.h node.h powerup.h shield.h spaceship.h spacewars.h user.h .tmp/hw41.0.0/ && $(COPY_FILE) --parents badguy.cpp bullet.cpp collisions.cpp dropPowerUps.cpp explosions.cpp main.cpp moveBullets.cpp powerup.cpp screens.cpp shield.cpp slots.cpp spaceship.cpp spacewars.cpp user.cpp .tmp/hw41.0.0/ && (cd `dirname .tmp/hw41.0.0` && $(TAR) hw41.0.0.tar hw41.0.0 && $(COMPRESS) hw41.0.0.tar) && $(MOVE) `dirname .tmp/hw41.0.0`/hw41.0.0.tar.gz . && $(DEL_FILE) -r .tmp/hw41.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_spacewars.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_spacewars.cpp
moc_spacewars.cpp: bullet.h \
		spaceship.h \
		badguy.h \
		powerup.h \
		spacewars.h \
		shield.h \
		node.h \
		linkedlist.h \
		user.h \
		spacewars.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) spacewars.h -o moc_spacewars.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

badguy.o: badguy.cpp badguy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o badguy.o badguy.cpp

bullet.o: bullet.cpp bullet.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bullet.o bullet.cpp

collisions.o: collisions.cpp spacewars.h \
		bullet.h \
		spaceship.h \
		badguy.h \
		powerup.h \
		shield.h \
		node.h \
		linkedlist.h \
		user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o collisions.o collisions.cpp

dropPowerUps.o: dropPowerUps.cpp spacewars.h \
		bullet.h \
		spaceship.h \
		badguy.h \
		powerup.h \
		shield.h \
		node.h \
		linkedlist.h \
		user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dropPowerUps.o dropPowerUps.cpp

explosions.o: explosions.cpp spacewars.h \
		bullet.h \
		spaceship.h \
		badguy.h \
		powerup.h \
		shield.h \
		node.h \
		linkedlist.h \
		user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o explosions.o explosions.cpp

main.o: main.cpp spacewars.h \
		bullet.h \
		spaceship.h \
		badguy.h \
		powerup.h \
		shield.h \
		node.h \
		linkedlist.h \
		user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

moveBullets.o: moveBullets.cpp spacewars.h \
		bullet.h \
		spaceship.h \
		badguy.h \
		powerup.h \
		shield.h \
		node.h \
		linkedlist.h \
		user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moveBullets.o moveBullets.cpp

powerup.o: powerup.cpp powerup.h \
		spacewars.h \
		bullet.h \
		spaceship.h \
		badguy.h \
		shield.h \
		node.h \
		linkedlist.h \
		user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o powerup.o powerup.cpp

screens.o: screens.cpp spacewars.h \
		bullet.h \
		spaceship.h \
		badguy.h \
		powerup.h \
		shield.h \
		node.h \
		linkedlist.h \
		user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o screens.o screens.cpp

shield.o: shield.cpp shield.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o shield.o shield.cpp

slots.o: slots.cpp spacewars.h \
		bullet.h \
		spaceship.h \
		badguy.h \
		powerup.h \
		shield.h \
		node.h \
		linkedlist.h \
		user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o slots.o slots.cpp

spaceship.o: spaceship.cpp spaceship.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spaceship.o spaceship.cpp

spacewars.o: spacewars.cpp spacewars.h \
		bullet.h \
		spaceship.h \
		badguy.h \
		powerup.h \
		shield.h \
		node.h \
		linkedlist.h \
		user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spacewars.o spacewars.cpp

user.o: user.cpp user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o user.o user.cpp

moc_spacewars.o: moc_spacewars.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_spacewars.o moc_spacewars.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

